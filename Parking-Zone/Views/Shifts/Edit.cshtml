@model Parking_Zone.Models.Shift

@{
    ViewData["Title"] = "Edit Shift";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Edit Shift</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
        <li class="breadcrumb-item"><a asp-action="Index">Shifts</a></li>
        <li class="breadcrumb-item active">Edit</li>
    </ol>

    <div class="row">
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-clock me-1"></i>
                    Edit Shift Details
                </div>
                <div class="card-body">
                    <form asp-action="Edit">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="Id" />
                        <input type="hidden" asp-for="CreatedAt" />

                        <div class="mb-3">
                            <label asp-for="OperatorId" class="form-label">Operator</label>
                            <select asp-for="OperatorId" class="form-select" asp-items="ViewBag.Operators">
                                <option value="">-- Select Operator --</option>
                            </select>
                            <span asp-validation-for="OperatorId" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="StartTime" class="form-label">Start Time</label>
                            <input asp-for="StartTime" class="form-control" type="datetime-local" />
                            <span asp-validation-for="StartTime" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="EndTime" class="form-label">End Time</label>
                            <input asp-for="EndTime" class="form-control" type="datetime-local" />
                            <span asp-validation-for="EndTime" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Notes" class="form-label">Notes</label>
                            <textarea asp-for="Notes" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <button type="submit" class="btn btn-primary">Save</button>
                            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                            @if (!Model.EndTime.HasValue)
                            {
                                <form asp-action="EndShift" asp-route-id="@Model.Id" method="post" style="display: inline;">
                                    <button type="submit" class="btn btn-warning">End Shift</button>
                                </form>
                            }
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-info-circle me-1"></i>
                    Shift Information
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-4">Operator</dt>
                        <dd class="col-sm-8">@Model.Operator?.Name</dd>

                        <dt class="col-sm-4">Status</dt>
                        <dd class="col-sm-8">
                            @if (!Model.EndTime.HasValue)
                            {
                                <span class="badge bg-success">Active</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Completed</span>
                            }
                        </dd>

                        <dt class="col-sm-4">Duration</dt>
                        <dd class="col-sm-8">
                            @{
                                var endTime = Model.EndTime ?? DateTime.UtcNow;
                                var duration = endTime - Model.StartTime;
                                @duration.ToString(@"hh\:mm")
                            }
                        </dd>

                        <dt class="col-sm-4">Created At</dt>
                        <dd class="col-sm-8">@Model.CreatedAt.ToLocalTime().ToString("dd/MM/yyyy HH:mm")</dd>

                        @if (Model.UpdatedAt.HasValue)
                        {
                            <dt class="col-sm-4">Last Updated</dt>
                            <dd class="col-sm-8">@Model.UpdatedAt.Value.ToLocalTime().ToString("dd/MM/yyyy HH:mm")</dd>
                        }
                    </dl>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            // Initialize select2 for better dropdown experience
            $('.form-select').select2({
                theme: 'bootstrap4'
            });
        });
    </script>
}
